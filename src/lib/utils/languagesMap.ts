import { extractExtensionFromFilename } from './index';

const LANGUAGE_MAP: { [key: string]: string } = {
  feature: 'cucumber',
  abap: 'abap',
  adb: 'ada',
  ads: 'ada',
  ada: 'ada',
  ahk: 'ahk',
  ahkl: 'ahk',
  htaccess: 'apacheconf',
  conf: 'apacheconf',
  applescript: 'applescript',
  as: 'as3',
  asy: 'asy',
  sh: 'bash',
  ksh: 'bash',
  bash: 'bash',
  ebuild: 'bash',
  eclass: 'bash',
  bat: 'bat',
  cmd: 'bat',
  befunge: 'befunge',
  bmx: 'blitzmax',
  boo: 'boo',
  bf: 'brainfuck',
  b: 'brainfuck',
  c: 'c',
  h: 'c',
  cfm: 'cfm',
  cfml: 'cfm',
  cfc: 'cfm',
  tmpl: 'cheetah',
  spt: 'cheetah',
  cl: 'cl',
  lisp: 'cl',
  el: 'cl',
  clj: 'clojure',
  cljs: 'clojure',
  cmake: 'cmake',
  coffee: 'coffeescript',
  'sh-session': 'console',
  control: 'control',
  cpp: 'cpp',
  hpp: 'cpp',
  'c++': 'cpp',
  'h++': 'cpp',
  cc: 'cpp',
  hh: 'cpp',
  cxx: 'cpp',
  hxx: 'cpp',
  pde: 'cpp',
  cs: 'csharp',
  css: 'css',
  pyx: 'cython',
  pxd: 'cython',
  pxi: 'cython',
  d: 'd',
  di: 'd',
  pas: 'delphi',
  diff: 'diff',
  patch: 'diff',
  dpatch: 'dpatch',
  darcspatch: 'dpatch',
  duel: 'duel',
  jbst: 'duel',
  dylan: 'dylan',
  dyl: 'dylan',
  erb: 'erb',
  'erl-sh': 'erl',
  erl: 'erlang',
  hrl: 'erlang',
  evoque: 'evoque',
  factor: 'factor',
  flx: 'felix',
  flxh: 'felix',
  f: 'fortran',
  f90: 'fortran',
  s: 'gas',
  kid: 'genshi',
  gitignore: 'gitignore',
  vert: 'glsl',
  frag: 'glsl',
  geo: 'glsl',
  plot: 'gnuplot',
  plt: 'gnuplot',
  go: 'go',
  man: 'groff',
  haml: 'haml',
  hs: 'haskell',
  html: 'html',
  htm: 'html',
  xhtml: 'html',
  xslt: 'html',
  hx: 'hx',
  hy: 'hybris',
  hyb: 'hybris',
  ini: 'ini',
  cfg: 'ini',
  io: 'io',
  ik: 'ioke',
  weechatlog: 'irc',
  jade: 'jade',
  java: 'java',
  js: 'js',
  jsp: 'jsp',
  lhs: 'lhs',
  ll: 'llvm',
  lgt: 'logtalk',
  lua: 'lua',
  wlua: 'lua',
  mak: 'make',
  mao: 'mako',
  maql: 'maql',
  mhtml: 'mason',
  mc: 'mason',
  mi: 'mason',
  md: 'markdown',
  mo: 'modelica',
  def: 'modula2',
  mod: 'modula2',
  moo: 'moocode',
  mu: 'mupad',
  mxml: 'mxml',
  myt: 'myghty',
  asm: 'nasm',
  ns2: 'newspeak',
  objdump: 'objdump',
  m: 'objectivec',
  j: 'objectivej',
  ml: 'ocaml',
  mli: 'ocaml',
  mll: 'ocaml',
  mly: 'ocaml',
  ooc: 'ooc',
  pl: 'perl',
  pm: 'perl',
  php: 'php',
  ps: 'postscript',
  eps: 'postscript',
  pot: 'pot',
  po: 'pot',
  pov: 'pov',
  inc: 'pov',
  prolog: 'prolog',
  pro: 'prolog',
  properties: 'properties',
  proto: 'protobuf',
  py3tb: 'py3tb',
  pytb: 'pytb',
  py: 'python',
  pyw: 'python',
  sc: 'python',
  tac: 'python',
  R: 'r',
  rb: 'rb',
  rbw: 'rb',
  Rakefile: 'rb',
  rake: 'rb',
  gemspec: 'rb',
  rbx: 'rb',
  duby: 'rb',
  Rout: 'rconsole',
  r3: 'rebol',
  cw: 'redcode',
  rhtml: 'rhtml',
  rst: 'rst',
  rest: 'rst',
  sass: 'sass',
  scala: 'scala',
  scaml: 'scaml',
  scm: 'scheme',
  scss: 'scss',
  st: 'smalltalk',
  tpl: 'smarty',
  list: 'sourceslist',
  S: 'splus',
  sql: 'sql',
  'sqlite3-console': 'sqlite3',
  squidconf: 'squidconf',
  ssp: 'ssp',
  tcl: 'tcl',
  tcsh: 'tcsh',
  csh: 'tcsh',
  tex: 'tex',
  aux: 'tex',
  toc: 'tex',
  txt: 'text',
  v: 'v',
  sv: 'v',
  vala: 'vala',
  vapi: 'vala',
  vb: 'vbnet',
  bas: 'vbnet',
  vm: 'velocity',
  fhtml: 'velocity',
  vim: 'vim',
  vimrc: 'vim',
  xml: 'xml',
  xsl: 'xml',
  rss: 'xml',
  xsd: 'xml',
  wsdl: 'xml',
  xqy: 'xquery',
  xquery: 'xquery',
  yaml: 'yaml',
  yml: 'yaml',
  json: 'json',
  jsx: 'js',
  tsx: 'typescript',
  ts: 'typescript',
};

const getLanguageForExtension = (extension: string) => {
  const cleanExtension = extension.toLowerCase().replace(/^\./, '');
  return LANGUAGE_MAP[cleanExtension] || '';
};

export const getLanguageFromFilename = (filename: string) => {
  const extension = extractExtensionFromFilename(filename);
  if (!extension) {
    return '';
  }

  const language = getLanguageForExtension(extension);
  return language || '';
};
